
# Problem: Compute multipoles
# Author:  Ryan Golant (ryan.golant@columbia.edu)
#
# July 19, 2022

#======================================================================
# PROBLEM DEFINITION
#======================================================================

 Domain {
     lower = [ -0.5, -0.5 ];
     upper = [ 0.5, 0.5 ];
 }

 Initial {
    list = ["value"];

    value {
        density = [ 1.00 ];
	# density = [10.0, y >= 0.0, 1.0];
    }
    
 }

 Boundary {
     type = "periodic";
 }

 Stopping {
     cycle = 1;
    # time = 0.10000;
 }

#======================================================================
# DISCRETIZATION
#======================================================================

 Mesh {
     root_rank = 2;
     root_size   = [ 2, 2 ];  # total number of cells in root grid
     root_blocks = [  1,  1 ];  # number of blocks in root grid
                                # (so block size = (64/4,32/2) = (16,16)
 }

 Adapt {
     list = [ "density" ];
     # list = [ "slope" ];
     
     max_level = 1;

     density {
         field_list = [ "density" ];
         max_coarsen = 0.00;
         min_refine = 0.99;
         type = "density";
	    # type = "slope";
     }
 }

 Field {
     alignment = 8;
     gamma = 1.4000;
     ghost_depth = 1;
     list = [ "density" ];
     padding = 0;
 }

#======================================================================
# COMPUTATION
#======================================================================

 Method {

     # "multipole": compute multipoles and pass multipoles up octree

     list = [ "multipole" ];

     multipole {
         timeStep = 10000.0;
	 theta = 0.1;
     }
 }

#======================================================================
# OUTPUT
#======================================================================

 Output {
    list = [];    
 }
